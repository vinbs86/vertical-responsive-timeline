/* =========================================================
   orlovmax.com less elements library v1.1
   ===================================
   More info at https://github.com/orlovmax/less-elements
   ========================================================= */
     
.testbg(@red: 255, @green: 0, @blue: 0, @alpha: .3) {
	background-color: rgba(@red, @green, @blue, @alpha);
}
.testout(@width: 1px, @line-type: solid, @color: #0074d9) {
	outline: @width @line-type @color;
}
.hidentext {
	text-indent: 100%;
	white-space: nowrap;
	overflow: hidden;
} 
.clearfix() {
	clear:both;
	&:before,
	&:after {
	    display: block;
		content: '';
		clear: both;
		height: 0;
	}
}

.opacity(@opacity: 0.5) {
  -webkit-opacity: @opacity;
   -khtml-opacity: @opacity;
     -moz-opacity: @opacity;
          opacity: @opacity;
  @opperc: @opacity * 100;
  -ms-filter: ~"progid:DXImageTransform.Microsoft.Alpha(opacity=@{opperc})";
  filter: ~"alpha(opacity=@{opperc})";
}
.box-sizing(@sizing: border-box) {
  -webkit-box-sizing: @sizing;
     -moz-box-sizing: @sizing;
      -ms-box-sizing: @sizing;
          box-sizing: @sizing;
}
.size(@width:0, @height:0) {
	width: @width;
	height: @height; 
}
.user-select(@argument: none) {
  -webkit-user-select: @argument;
     -moz-user-select: @argument;
      -ms-user-select: @argument;
          user-select: @argument;
}
.bg-cover{
	-webkit-background-size: cover;
	        background-size: cover;
} 
.bg-contain{
	-webkit-background-size: contain;
	        background-size: contain;
}
.bg-size(...){
	-webkit-background-size: @arguments;
	        background-size: @arguments;
}
.rounded(@radius: 5px) {
  -webkit-border-radius: @radius;
     -moz-border-radius: @radius;
          border-radius: @radius;
}
.border-radius(@top-left: 5px, @top-right: 5px, @bottom-right: 5px, @bottom-left: 5px) {
  -webkit-border-radius: @top-left @top-right @bottom-right @bottom-left;
     -moz-border-radius: @top-left @top-right @bottom-right @bottom-left;
          border-radius: @top-left @top-right @bottom-right @bottom-left;
}
.linear-gradient(@angle-position: top, @start-color: #fff, @end-color: #000, @fallback-color: @start-color){	
	background: @fallback-color;
	background-image: -webkit-gradient(linear, @angle-position, from(@start-color), to(@end-color));	
	background:-webkit-linear-gradient(@angle-position, @start-color, @end-color);
	   background:-moz-linear-gradient(@angle-position, @start-color, @end-color);
	    background:-ms-linear-gradient(@angle-position, @start-color, @end-color);
	     background:-o-linear-gradient(@angle-position, @start-color, @end-color);
	        background:linear-gradient(@angle-position, @start-color, @end-color);
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=@start-color, endColorstr=@end-color)
} 

.box-shadow(@hoff: 1px, @voff: 1px, @blur: 2px, @spread: 0, @color: #000){
-webkit-box-shadow: @hoff @voff @blur @spread @color;
   -moz-box-shadow: @hoff @voff @blur @spread @color;
		box-shadow: @hoff @voff @blur @spread @color;
} 
.inset-box-shadow(@hoff: 1px, @voff: 1px, @blur: 2px, @spread: 0, @color: #000){
-webkit-box-shadow: inset @hoff @voff @blur @spread @color;
   -moz-box-shadow: inset @hoff @voff @blur @spread @color;
		box-shadow: inset @hoff @voff @blur @spread @color;
}


.animation(@animation-name:first, @animation-duration:1, @animation-tfunction:linear, @animation-delay:0, @animation-iteration:infinite, @animation-direction:normal, @animation-play-state:running){
	-webkit-animation: @animation-name unit(@animation-duration, s) @animation-tfunction unit(@animation-delay, s) @animation-iteration @animation-direction;
			animation: @animation-name unit(@animation-duration, s) @animation-tfunction unit(@animation-delay, s) @animation-iteration @animation-direction;
	-webkit-animation-play-state: @animation-play-state;
		    animation-play-state: @animation-play-state;	
}

.transform(...) {
  -webkit-transform: @arguments;
     -moz-transform: @arguments;
      -ms-transform: @arguments;
       -o-transform: @arguments;
          transform: @arguments;
}	
.t-origin(@X-axis:50%, @Y-axis:50%, @Z-axis:0){
	-webkit-transform-origin: @X-axis @Y-axis @Z-axis;
       -moz-transform-origin: @X-axis @Y-axis @Z-axis;
        -ms-transform-origin: @X-axis @Y-axis @Z-axis;
         -o-transform-origin: @X-axis @Y-axis @Z-axis;
            transform-origin: @X-axis @Y-axis @Z-axis;	
}
	.rotate(@rotate-angle: 0){
		-webkit-transform: rotate(unit(@rotate-angle, deg));
		   -moz-transform: rotate(unit(@rotate-angle, deg));
			-ms-transform: rotate(unit(@rotate-angle, deg));
			 -o-transform: rotate(unit(@rotate-angle, deg));
				transform: rotate(unit(@rotate-angle, deg));
	}
	.scale(@scale: 1){
		-webkit-transform: scale(@scale);
		   -moz-transform: scale(@scale);
            -ms-transform: scale(@scale);
			 -o-transform: scale(@scale);
				transform: scale(@scale);
	} 
		.scaleXY(@scaleX: 1, @scaleY: 1){
			-webkit-transform: scale(@scaleX, @scaleY);
			   -moz-transform: scale(@scaleX, @scaleY);
				-ms-transform: scale(@scaleX, @scaleY);
				 -o-transform: scale(@scaleX, @scaleY);
					transform: scale(@scaleX, @scaleY);
		} 
		.scaleX(@scaleX: 1){
			-webkit-transform: scaleX(@scaleX);
			   -moz-transform: scaleX(@scaleX);
				-ms-transform: scaleX(@scaleX);
				 -o-transform: scaleX(@scaleX);
					transform: scaleX(@scaleX);
		} 
		.scaleY(@scaleY: 1){
			-webkit-transform: scaleY(@scaleY);
			   -moz-transform: scaleY(@scaleY);
				-ms-transform: scaleY(@scaleY);
				 -o-transform: scaleY(@scaleY);
					transform: scaleY(@scaleY);
		} 
	.skew(@skewX-angle: 0, @skewY-angle: 0){
	-webkit-transform: skew(unit(@skewX-angle, deg), unit(@skewY-angle, deg));
	   -moz-transform: skew(unit(@skewX-angle, deg), unit(@skewY-angle, deg));
		-ms-transform: skew(unit(@skewX-angle, deg), unit(@skewY-angle, deg));
		 -o-transform: skew(unit(@skewX-angle, deg), unit(@skewY-angle, deg));
			transform: skew(unit(@skewX-angle, deg), unit(@skewY-angle, deg));
	}                                                      
		.skewX(@skewX-angle: 0){
		-webkit-transform: skewX(unit(@skewX-angle, deg));
		   -moz-transform: skewX(unit(@skewX-angle, deg));
			-ms-transform: skewX(unit(@skewX-angle, deg));
			 -o-transform: skewX(unit(@skewX-angle, deg));
				transform: skewX(unit(@skewX-angle, deg));
		}
		.skewY(@skewY-angle: 0){
		-webkit-transform: skewY(unit(@skewY-angle, deg));
		   -moz-transform: skewY(unit(@skewY-angle, deg));
			-ms-transform: skewY(unit(@skewY-angle, deg));
			 -o-transform: skewY(unit(@skewY-angle, deg));
				transform: skewY(unit(@skewY-angle, deg));
		}
	.translate(@move-x:0, @move-y:0){
		-webkit-transform: translate(@move-x,@move-y);
		   -moz-transform: translate(@move-x,@move-y);
			-ms-transform: translate(@move-x,@move-y);
			 -o-transform: translate(@move-x,@move-y);
				transform: translate(@move-x,@move-y);
	}
	
.transition(@property: all, @duration: .5, @tfunction: ease, @delay: 0){
	-webkit-transition: @property unit(@duration, s) @tfunction unit(@delay, s);
	   -moz-transition: @property unit(@duration, s) @tfunction unit(@delay, s);
		-ms-transition: @property unit(@duration, s) @tfunction unit(@delay, s);
		 -o-transition: @property unit(@duration, s) @tfunction unit(@delay, s);
			transition: @property unit(@duration, s) @tfunction unit(@delay, s);
}